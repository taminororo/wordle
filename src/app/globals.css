@import "tailwindcss";



:root {

--background: #ffffff;

--foreground: #171717;

}



/* 既存の背景色クラスはそのまま */

.bg-correct {

background-color: green; /* Wordleの緑色に合わせる */

}



.bg-present {

background-color: rgb(201, 180, 88); /* Wordleの黄色に合わせる */

}



.bg-absent {

background-color: rgb(120, 124, 126); /* Wordleの灰色に合わせる */

}





/* --- ★フリップアニメーションのCSS定義 --- */



/* 各タイル（文字のマス目）のラッパー */

.flip-card {

background-color: transparent;

width: 56px; /* w-14 (14 * 4 = 56px) に合わせて調整 */

height: 56px; /* h-14 (14 * 4 = 56px) に合わせて調整 */

perspective: 1000px; /* 3D効果のために必要 */

}



/* フリップアニメーションの中心となる要素 */

.flip-card-inner {

position: relative;

width: 100%;

height: 100%;

text-align: center;

transition: transform 0.6s; /* アニメーションの速度と滑らかさ */

transform-style: preserve-3d; /* 3D回転のために必要 */

}



/* JavaScriptで 'flipped' クラスが追加されたときにフリップ */

.flip-card.flipped .flip-card-inner {

transform: rotateY(180deg);

}



/* フロント面とバック面の共通スタイル */

.flip-card-front, .flip-card-back {

position: absolute;

width: 100%;

height: 100%;

-webkit-backface-visibility: hidden; /* Safariで裏面がチラつくのを防ぐ */

backface-visibility: hidden; /* 裏面を隠す */

display: flex; /* Tailwindのflexプロパティが効くように */

align-items: center;

justify-content: center;

}



/* フロント面 */

.flip-card-front {

/* ここに共通の border, rounded-md, text-xl, font-bold などはJSX側で適用されるため、

特に追加のCSSは不要。デフォルトの背景はJSXのbg-gray-700などで上書きされる。 */

}



/* バック面 */

.flip-card-back {

/* この面のスタイルは、フリップ後の最終的な表示です。

JSXで適用される bg-green-700, bg-yellow-500, bg-gray-700 がここに適用されます。

デフォルトの背景色(dodgerblue)は削除するか、デバッグ用に残しても良いでしょう。 */

/* background-color: dodgerblue; /* 削除推奨 */

color: white; /* テキストの色 */

transform: rotateY(180deg); /* 裏面を最初から回転させておく */

}



/* 各タイルのフリップアニメーションをずらすためのスタイル (optional) */

/* この部分は、JSXの style={{ animationDelay: ... }} で制御するので、ここでは直接記述しません */



/* --- ★フリップアニメーションのCSS定義ここまで --- */





@theme inline {

--color-background: var(--background);

--color-foreground: var(--foreground);

--font-sans: var(--font-geist-sans);

--font-mono: var(--font-geist-mono);

}



@media (prefers-color-scheme: dark) {

:root {

--background: #0a0a0a;

--foreground: #ededed;

}

}



body {

background: var(--background);

color: var(--foreground);

font-family: Arial, Helvetica, sans-serif;

}

/* global.css */
/* ... (既存のCSS) ... */

@keyframes wordCascade {
  0% {
    transform: translateY(0px) translateX(var(--random-x, 0)); /* 上から開始、横位置もランダム */
    opacity: 0;
  }
  20% {
    opacity: 0.8; /* フェードイン */
  }
  80% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(calc(100vh + 50px)) translateX(var(--random-x, 0)); /* 画面下まで移動 */
    opacity: 0; /* フェードアウト */
  }
}

.cascading-word {
  position: fixed; /* 画面に固定して、スクロールに影響されないように */
  top: 0;
  left: 0;
  font-size: 2rem; /* 大きめのフォントサイズ */
  color: rgba(255, 255, 255, 1.0); /* 薄い色で背景感を出す */
  pointer-events: none; /* クリックなどのイベントを透過させる */

  /* アニメーションの適用。 duration, delay, timing-function はJSで動的に設定することも可能 */
  animation: wordCascade var(--animation-duration, 5s) linear forwards;
}

/* Result Modal Styles */
.result-modal-overlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
}

.result-modal-content {
  background-color: #2d3748; /* dark gray */
  color: white;
  padding: 2rem;
  border-radius: 0.5rem;
  text-align: center;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  max-width: 90%;
  width: 400px;
}

.result-modal-title {
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 1.5rem;
}

.result-modal-body p {
  margin-bottom: 0.5rem;
  font-size: 1.2rem;
}

.result-modal-word {
  font-size: 2rem;
  font-weight: bold;
  color: #48bb78; /* green-500 */
  letter-spacing: 0.1em;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
}

.result-modal-translation {
  font-size: 1.5rem;
  color: #a0aec0; /* gray-500 */
  margin-bottom: 2rem;
}